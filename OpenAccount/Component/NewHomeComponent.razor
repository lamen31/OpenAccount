@using Microsoft.AspNetCore.Components
@using OpenAccount.Data

@inject Utility utility
@inject Transaksi trx
@inject Config config
@inject HitLog hitlog
<!-- ======= Hero Section ======= -->
<section id="hero" style="position:fixed;" @onclick="ResetTimer">
    <div class="container">
        <div class="row">
            <div class="col-xl-12 pt-5 pt-lg-0 order-2 order-lg-1 d-flex flex-column justify-content-center" data-aos="fade-up">
                <div style="text-align: center;">
                    <h2 style="font-weight: bold;">Get <b style="color: #F37024;">Easy</b>, Simply Use</h2>
                    <h5 style="color: #00529C; margin-top: -1rem; margin-bottom: 2em;">Silakan pilih menu yang Anda inginkan</h5>
                </div>
                <div class="card-deck" style="float: left; margin-top: 1%; margin-bottom: 1%; padding-left: 20%; padding-right: 20%;" data-aos="fade-up">
                    <div class="card" style="height: 90%; background-color: #00509B; text-align: center; border-radius: 15px;" @onclick="PrintBuku">
                        <div class="text-center" style="align-items: center; height: 60%;">
                            <img src="../assets/img/Folder SVG/bukutabungan.svg" class="card-img-top" style="width: 70%; padding: 65px;" alt="...">
                        </div>
                        <div class="card-body2">
                            <small class="text-muted" style="font-size: 17px; color: #ffffff; font-weight: 600;">Print Buku Tabungan</small>
                        </div>
                    </div>
                    <div class="card" style="height: 90%; background-color: #00509B; text-align: center; border-radius: 15px;" @onclick="PrintHistori">
                        <div class="text-center" style="align-items: center; height: 60%;">
                            <img src="../assets/img/Folder SVG/printhistori.svg" class="card-img-top" style="width: 70%; padding: 65px;" alt="...">
                        </div>
                        <div class="card-body2">
                            <small class="text-muted" style="font-size: 17px; color: #ffffff; font-weight: 600;">Print Histori Transaksi</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End Hero -->
<!-- ======= Footer ======= -->
<footer id="footer" class="fixed-bottom">
    <div class="container" style="display: flex;">
        <div class="col-xl-2 order-1 order-lg-1">
            <button type="button" class="btn btn-primary" style="background-color: #4E4E4E; margin-left:-5%;" @onclick="AmbilKartu">Batal</button>
        </div>
        <div class="col-xl-8 order-2 order-lg-2">
            <ol class="track-progressHome" style="margin-left: 0%; margin-bottom: 2%;">
                <li class="done">
                    <em>1</em>
                    <!-- <span>Menu</span> -->
                </li>
                <li class="done">
                    <em>2</em>
                    <!-- <span>T & C</span> -->
                </li>
                <li class="todo">
                    <em>3</em>
                    <!-- <span>Menu</span> -->
                </li>
                <li class="todo">
                    <em>4</em>
                    <!-- <span>Verification</span> -->
                </li>
                <li class="todo">
                    <em>5</em>
                    <!-- <span>Insert Money</span> -->
                </li>
            </ol>
        </div>
        <div class="col-xl-2 order-3 order-lg-3">
            <!-- <a href="term-condition.html"><button type="button" class="btn btn-primary" style="float: right;">Continue</button></a> -->
        </div>
    </div>
</footer><!-- End Footer -->

@code {
    [Parameter]
    public EventCallback<string> OnClick { get; set; }

    private TimeSpan span;
    private int overtime = 60000;
    private bool isTimeOut = false;
    private bool isTime = false;
    private bool isTimer = true;
    private DateTime starttime;

    protected override async Task OnInitializedAsync()
    {
        trx._AccountNumber = trx._AccountNumber2;
        Utility.WriteLog("Home condition : set account number " + trx._AccountNumber + " on New Home", "step-action");
    }

    private async Task ResetTimer()
    {
        starttime = DateTime.Now;
    }
    private async Task IdleTime()
    {
        do
        {
            span = DateTime.Now - starttime;
            if (overtime > 0 && span.TotalMilliseconds > overtime)
            {
                isTime = true;
                isTimeOut = true;
                break;
            }
        } while (isTimeOut == false);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Utility.WriteLog("Home condition : entered into new home", "step-action");
            trx.timeOut = "newhome";
            isTimer = true;
            starttime = DateTime.Now;
            await Task.Run(() => IdleTime());
            if (isTime && isTimeOut)
            {
                isTimeOut = true;
                await Task.Delay(100);
                StateHasChanged();
                await Task.Delay(2000);
                isTime = false;
                OnClick.InvokeAsync("konfirmasitimeout");
            }
        }
    }

    private async Task PrintBuku()
    {
        isTimeOut = true;
        isTimer = false;
        Utility.WriteLog("Home condition : move to buku input data", "step-action");
        trx.jenisLayanan = 0;//0. Pencetakan Passbook Printing
        OnClick.InvokeAsync("bukuinputdata");
    }

    private async Task PrintHistori()
    {
        isTimeOut = true;
        isTimer = false;
        Utility.WriteLog("Home condition : move to histori pilih menu", "step-action");
        trx.jenisLayanan = 2;//2. Pencetakan Rekening Koran
        OnClick.InvokeAsync("historiPilih");
    }

    private async Task AmbilKartu()
    {
        isTimeOut = true;
        isTimer = false;
        Utility.WriteLog("Home condition : move to ambil kartu", "step-action");
        HitServices.SendLog(trx, config, "NEW HOME: User Cancel Transaction");
        OnClick.InvokeAsync("default");
    }
}
