@using Microsoft.AspNetCore.Components
@using System.IO.Ports
@using System.Text
@using OpenAccount.Data

@inject Utility utility
@inject EDC edc
@inject Config config
@inject Transaksi trx
<!-- ======= Hero Section ======= -->
<section id="hero">

    <div class="container">
        <div class="row">
            <div class="col-xl-6 pt-5 pt-lg-0 order-2 order-lg-1 d-flex flex-column justify-content-center" data-aos="fade-up">
                <div>
                    <span class="badge badge-primary" style="margin-bottom: 2rem; font-size: 20px;">Ganti PIN</span><br>
                    <h3 style="color: #00529C; font-size: 25px;">Silakan Masukkan <b>PIN ATM</b> yang baru</h3>
                    <div class="form-row" style="margin-top: 9%;">
                        <div class="form-group col-md-6">
                            <label style="font-weight: 600; font-size: 18px;">PIN ATM Baru <b style="color: red;"> (*6 Digit)</b></label>
                            <input type="password" class="form-control" placeholder="Masukan Pin Baru Anda" @bind="strpin">
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-6 order-1 order-lg-2 hero-img" data-aos="fade-left">
                <img src="../assets/img/Folder GIF/Enter-PIN.gif" class="img-fluid" alt="" style="width: 50%; margin-top: 5%;">
            </div>
        </div>
    </div>
</section>
<!-- End Hero -->
<!-- ======= Footer ======= -->
<footer id="footer" class="fixed-bottom">
    <div class="container" style="display: flex;">
        <div class="col-xl-2 order-1 order-lg-1">
            <button type="button" class="btn btn-primary" style="background-color: #4E4E4E;" @onclick="AmbilKartu">Batal</button>
        </div>
        <div class="col-xl-8 order-2 order-lg-2">
            <ol class="track-progressGP" style="margin-left: 0%; margin-bottom: 2%;">
                <li class="done">
                    <em>1</em>
                    <!-- <span>Menu</span> -->
                </li>
                <li class="done">
                    <em>2</em>
                    <!-- <span>T & C</span> -->
                </li>
                <li class="done">
                    <em>3</em>
                    <!-- <span>Menu</span> -->
                </li>
                <li class="todo">
                    <em>4</em>
                    <!-- <span>Verification</span> -->
                </li>
                <li class="todo">
                    <em>5</em>
                    <!-- <span>Verification</span> -->
                </li>
            </ol>
        </div>
        <div class="col-xl-2 order-3 order-lg-3">
            <!-- <button type="button" class="btn btn-primary" style="float: right;">Lanjut</button> -->
        </div>
    </div>
</footer><!-- End Footer -->

@if (isTime)
{
    <div class="modal" id="exampleModalCenter" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="background-color:rgba(0, 0, 0, 0.418);">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border text-primary" role="status" style="padding:0.5rem; margin-top: 5%;">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <div style="text-align: center; color: rgb(0, 0, 0);">
                        <h3 class="teks" style="margin-top: 5%;">Waktu Habis</h3>
                        <h5 style="font-style:italic;">Apakah Anda Ingin Melanjutkan Proses?</h5>
                        <div>
                            <button type="button" class="btn btn-primary" style="text-align:center; margin-top: 5%;" data-toggle="modal" data-target="#exampleModalCenter" @onclick="ChangeIsTime">YA</button>
                        </div>
                        <div>
                            <button type="button" class="btn btn-primary" style="text-align:center; margin-top: 2%;" data-toggle="modal" data-target="#exampleModalCenter" @onclick="AmbilKartu">TIDAK</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public EventCallback<string> OnClick { get; set; }

    private string strpin = string.Empty;
    private string strpinNomor = string.Empty;
    private SerialPort sPort = new SerialPort();
    private bool isLoop = true;
    private SerialPort serialPort = new SerialPort();
    private bool isPin = false;
    private TimeSpan span;
    private int overtime = 180000;
    private bool isTimeOut = false;
    private bool isTime = false;
    private DateTime starttime;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Utility.WriteLog("Ganti pin condition : entered into ganti pin input pin baru", "step-action");
            //starttime = DateTime.Now;
            //await Task.Run(() => IdleTime());
            //if (isTime)
            //{
            //    await Task.Delay(100);
            //    StateHasChanged();
            //}
            sPort.PortName = config.Read("PORT", Config.PARAM_PORT_EDC);
            Utility.WriteLog("Ganti pin condition : EDC process start", "step-action");
            await Task.Delay(100);
            try
            {
                await EDC("14");
                if (isPin)
                {
                    isTimeOut = true;
                    trx.setPinPertama(strpinNomor);
                    Utility.WriteLog("Ganti pin condition : input pin pertama " + strpinNomor + " success", "step-action");
                    Utility.WriteLog("Ganti pin condition : move to ganti pin input pin konfirmasi", "step-action");
                    OnClick.InvokeAsync("gantipininputpinkonfirmasi");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                Utility.WriteLog("Histori condition : EDC error --> " + ex.Message, "step-action");
            }
        }
    }

    private async Task IdleTime()
    {
        do
        {
            span = DateTime.Now - starttime;
            if (overtime > 0 && span.TotalMilliseconds > overtime)
            {
                isTime = true;
                isTimeOut = true;
                break;
            }
        } while (isTimeOut == false);
    }

    private async Task ChangeIsTime()
    {
        isTime = !isTime;
        await Task.Delay(100);
        StateHasChanged();
    }

    private async Task AmbilKartu()
    {
        isTimeOut = true;
        Utility.WriteLog("Histori condition : move to ambil kartu", "step-action");
        OnClick.InvokeAsync("ambilkartu");
    }

    private async Task EDC(string ecrmsg)
    {
        string _statusCode = string.Empty;
        string stx = "02";
        string ecr = "424E49"; // BNI;
        string ecr_messsage = string.Empty;
        string etx = "03";
        string lrc = "00";
        string dataSplit = "";

        string dataRespond = string.Empty;


        serialPort = new SerialPort();

        Utility.WriteLog("Ganti pin condition : EDC serial port close", "step-action");
        serialPort.Close();

        string request_BankFiller = string.Empty;

        request_BankFiller = edc.HexaBankFiller("");

        ecr_messsage = ecrmsg
            + request_BankFiller;

        string data = stx
            + ecr
            + ecr_messsage
            + etx
            + lrc;

        byte[] data2 = edc.StringToByteArray(data);
        byte[] data2_with_lrc = edc.LRC(data2);
        //data2[56] = 0x77;
        serialPort.PortName = sPort.PortName;
        serialPort.BaudRate = 115200;
        //serialPort.DataReceived += new SerialDataReceivedEventHandler(port_DataReceivedLoop);

        Console.WriteLine("1");

        try
        {
            Utility.WriteLog("Ganti pin condition : EDC serial port open", "step-action");
            serialPort.Open();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            Utility.WriteLog("Histori condition : EDC error --> " + ex.Message, "step-action");
        }

        Utility.WriteLog("Ganti pin condition : EDC serial port write", "step-action");
        serialPort.Write(data2_with_lrc, 0, data2_with_lrc.Length);

        do
        {
            await Task.Delay(150);
            dataRespond = string.Empty;
            dataSplit = string.Empty;
            //bool exitLoop = false;
            //Console.WriteLine(dataRespond);
            if (serialPort.IsOpen)
            {
                Utility.WriteLog("Ganti pin condition : EDC serial port already open", "step-action");
                string dataCurrent = serialPort.ReadExisting();
                dataRespond += dataCurrent;
                //Console.WriteLine("Data Current: " + dataCurrent);
                //Console.WriteLine("Data Respond: " + dataRespond);
                if (dataRespond.Contains("BNI"))
                {
                    dataSplit = dataRespond.Substring(dataRespond.IndexOf("BNI"));
                    byte[] buffer = Encoding.ASCII.GetBytes(dataSplit);
                    int intBuffer = buffer[4];
                    switch (intBuffer)
                    {
                        case 69:
                            if (strpin.Length == 6 || strpinNomor.Length == 6)
                            {
                                isLoop = false;
                                isPin = true;
                            }
                            Utility.WriteLog("Ganti pin condition : " + strpin, "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpinNomor, "step-action");
                            Utility.WriteLog("Ganti pin condition : EDC pin enter", "step-action");
                            break;
                        case 88:
                            isTimeOut = true;
                            Utility.WriteLog("Ganti pin condition : EDC pin cancel", "step-action");
                            Utility.WriteLog("Ganti pin condition : move to gantii pin", "step-action");
                            OnClick.InvokeAsync("gantipin");
                            isLoop = false;
                            serialPort.Close();
                            break;
                        case 84:
                            Console.WriteLine(strpin);
                            Console.WriteLine(strpinNomor);
                            isLoop = false;
                            break;
                        case 67:
                            strpin = string.Empty;
                            strpinNomor = string.Empty;
                            Utility.WriteLog("Ganti pin condition : EDC pin clear", "step-action");
                            break;
                        case 32:
                            if (strpin.Length < 7)
                            {
                                strpin += "0";
                                strpinNomor += "0";
                            }
                            Utility.WriteLog("Ganti pin condition : EDC pin 0", "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpin, "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpinNomor, "step-action");
                            break;
                        case 1:
                            if (strpin.Length < 7)
                            {
                                strpin += "1";
                                strpinNomor += "1";
                            }
                            Utility.WriteLog("Ganti pin condition : EDC pin 1", "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpin, "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpinNomor, "step-action");
                            break;
                        case 2:
                            if (strpin.Length < 7)
                            {
                                strpin += "2";
                                strpinNomor += "2";
                            }
                            Utility.WriteLog("Ganti pin condition : EDC pin 2", "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpin, "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpinNomor, "step-action");
                            break;
                        case 3:
                            if (strpin.Length < 7)
                            {
                                strpin += "3";
                                strpinNomor += "3";
                            }
                            Utility.WriteLog("Ganti pin condition : EDC pin 3", "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpin, "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpinNomor, "step-action");
                            break;
                        case 4:
                            if (strpin.Length < 7)
                            {
                                strpin += "4";
                                strpinNomor += "4";
                            }
                            Utility.WriteLog("Ganti pin condition : EDC pin 4", "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpin, "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpinNomor, "step-action");
                            break;
                        case 5:
                            if (strpin.Length < 7)
                            {
                                strpin += "5";
                                strpinNomor += "5";
                            }
                            Utility.WriteLog("Ganti pin condition : EDC pin 5", "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpin, "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpinNomor, "step-action");
                            break;
                        case 6:
                            if (strpin.Length < 7)
                            {
                                strpin += "6";
                                strpinNomor += "6";
                            }
                            Utility.WriteLog("Ganti pin condition : EDC pin 6", "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpin, "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpinNomor, "step-action");
                            break;
                        case 7:
                            if (strpin.Length < 7)
                            {
                                strpin += "7";
                                strpinNomor += "7";
                            }
                            Utility.WriteLog("Ganti pin condition : EDC pin 7", "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpin, "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpinNomor, "step-action");
                            break;
                        case 8:
                            if (strpin.Length < 7)
                            {
                                strpin += "8";
                                strpinNomor += "8";
                            }
                            Utility.WriteLog("Ganti pin condition : EDC pin 8", "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpin, "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpinNomor, "step-action");
                            break;
                        case 9:
                            if (strpin.Length < 7)
                            {
                                strpin += "9";
                                strpinNomor += "9";
                            }
                            Utility.WriteLog("Ganti pin condition : EDC pin 9", "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpin, "step-action");
                            Utility.WriteLog("Ganti pin condition : " + strpinNomor, "step-action");
                            break;
                    }
                }
                //Console.WriteLine("Data Split: " + dataSplit);
                if (dataRespond.Contains("\x06"))
                {
                    if (dataRespond.Length > 10)
                    {
                        //serialPort.Close();
                        Utility.WriteLog("Ganti pin condition : EDC ACK", "step-action");
                    }
                }
                else if (dataRespond.Contains("\x15"))
                {
                    Utility.WriteLog("Ganti pin condition : EDC serial port close", "step-action");
                    serialPort.Close();
                    Utility.WriteLog("Ganti pin condition : EDC NAK", "step-action");
                }
            }
            await Task.Delay(100);
            StateHasChanged();
            //switch (strpin.Length)
            //{
            //    case 1:
            //        strpin = strpin.Substring(0, strpin.Length - 1) + "*";
            //        break;
            //    case 2:
            //        strpin = strpin.Substring(0, strpin.Length - 2) + "**";
            //        break;
            //    case 3:
            //        strpin = strpin.Substring(0, strpin.Length - 3) + "***";
            //        break;
            //    case 4:
            //        strpin = strpin.Substring(0, strpin.Length - 4) + "****";
            //        break;
            //    case 5:
            //        strpin = strpin.Substring(0, strpin.Length - 5) + "*****";
            //        break;
            //    case 6:
            //        strpin = strpin.Substring(0, strpin.Length - 6) + "******";
            //        break;
            //}
            //await Task.Delay(100);
            //StateHasChanged();

        } while (isLoop);

        Console.WriteLine("2");
        Utility.WriteLog("Ganti pin condition : EDC serial port close", "step-action");
        serialPort.Close();
        //serialPort.DataReceived += new SerialDataReceivedEventHandler(port_DataReceived);
    }
}
