@using Microsoft.AspNetCore.Components
@using OpenAccount.Data

@inject Transaksi trx
@inject Utility utility
@inject IDScanner scanner
@inject Config config
@inject CardDispenser dispenser
<!-- ======= Hero Section ======= -->
<section id="hero" style="margin-top: 50px;">

    <div class="container">
        <div class="row">
            <div class="col-xl-6 pt-5 pt-lg-0 order-2 order-lg-1 d-flex flex-column justify-content-center" data-aos="fade-up">
                <div>
                    <span class="badge badge-primary" style="margin-bottom: 2rem; font-size: 20px;">Ganti Kartu</span><br>
                </div>
                <h3 style="color: #FF6533; margin-bottom: 5%;">Nomor Rekening Anda <b>0987654321</b></h3>
                <h3 style="color: #00529C;">Harap konfirmasi data <b>e-KTP</b> Anda</h3>
                <table style="margin-top: 5%; line-height: 7px;">
                    <tr>
                        <td><h4 style="font-weight: 600;"> NIK </h4></td>
                        <td><h4 style="font-weight: 600;">:&emsp;</h4></td>
                        <td><h4 style="font-weight: 600;">@trx._KTPNIK</h4><br></td>
                    </tr>
                    <tr>
                        <td><h4 style="font-weight: 600;"> Nama </h4></td>
                        <td><h4 style="font-weight: 600;">:</h4></td>
                        <td><h4 style="font-weight: 600;">@trx._KTPNama</h4><br></td>
                    </tr>
                    <tr>
                        <td><h4 style="font-weight: 600;"> Status Perkawinan </h4></td>
                        <td><h4 style="font-weight: 600;">:</h4></td>
                        <td><h4 style="font-weight: 600;">@trx._KTPStatusPerkawinan</h4><br></td>
                    </tr>
                    <tr>
                        <td><h4 style="font-weight: 600;"> Pekerjaan</h4></td>
                        <td><h4 style="font-weight: 600;">:</h4></td>
                        <td><h4 style="font-weight: 600;">@trx._KTPPekerjaan</h4><br></td>
                    </tr>
                </table>
                <h3 style="color: #ff0000; font-size: 18px;">Tekan Tombol <b>"Cetak"</b> untuk mencetak Kartu Debit</h3>
            </div>
            <div class="col-xl-6 order-1 order-lg-2 hero-img" data-aos="fade-left">
                <img class="card-img-top" src="../assets/img/ktp-depan.png" alt="Card image cap">
            </div>
        </div>
    </div>
</section>
<!-- End Hero -->
<!-- ======= Footer ======= -->
<footer id="footer" class="fixed-bottom">
    <div class="container" style="display: flex;">
        <div class="col-xl-2 order-1 order-lg-1">
            <button type="button" class="btn btn-primary" style="background-color: #4E4E4E;" @onclick="KTP">Kembali</button>
        </div>
        <div class="col-xl-8 order-2 order-lg-2">
            <ol class="track-progressGK" style="margin-left: 0%; margin-bottom: 2%;">
                <li class="done">
                    <em>1</em>
                    <!-- <span>Menu</span> -->
                </li>
                <li class="done">
                    <em>2</em>
                    <!-- <span>T & C</span> -->
                </li>
                <li class="done">
                    <em>3</em>
                    <!-- <span>Menu</span> -->
                </li>
                <li class="done">
                    <em>4</em>
                    <!-- <span>Verification</span> -->
                </li>
                <li class="todo">
                    <em>5</em>
                    <!-- <span>Insert Money</span> -->
                </li>
            </ol>
        </div>
        <div class="col-xl-2 order-3 order-lg-3">
            <button type="button" class="btn btn-primary" style="float: right;" @onclick="Berhasil">Cetak</button>
        </div>
    </div>
</footer><!-- End Footer -->

@if (isVisible)
{
    <div class="modal" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="background-color:rgba(0, 0, 0, 0.418);">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border text-primary" role="status" style="padding:0.5rem; margin-top: 5%;">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <div style="text-align: center; color: rgb(0, 0, 0);">
                        <h3 class="teks" style="margin-top: 5%;">Mohon tunggu,</h3>
                        <h5 style="font-style:italic;">Sedang dalam proses...</h5>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (isTime)
{
    <div class="modal" id="exampleModalCenter" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="background-color:rgba(0, 0, 0, 0.418);">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border text-primary" role="status" style="padding:0.5rem; margin-top: 5%;">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <div style="text-align: center; color: rgb(0, 0, 0);">
                        <h3 class="teks" style="margin-top: 5%;">MAAF,</h3>
                        <h5 style="font-style:italic;">Waktu Anda Telah Habis!</h5>
                        <div>
                            <button type="button" class="btn btn-primary" style="text-align:center; margin-top: 5%;" data-toggle="modal" data-target="#exampleModalCenter" @onclick="ChangeIsTime">YA</button>
                        </div>
                        <div>
                            <button type="button" class="btn btn-primary" style="text-align:center; margin-top: 2%;" data-toggle="modal" data-target="#exampleModalCenter" @onclick="Home">TIDAK</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public EventCallback<string> OnClick { get; set; }

    private bool isVisible = false;
    private string dispenserPort = string.Empty;
    private string dispenserBox = string.Empty;
    private TimeSpan span;
    private int overtime = 180000;
    private bool isTimeOut = false;
    private bool isTime = false;
    private DateTime starttime;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Utility.WriteLog("Ganti kartu condition : entered into ganti kartu konfirmasi data", "step-action");
            starttime = DateTime.Now;
            await Task.Run(() => IdleTime());
            if (isTime)
            {
                isTimeOut = true;
                await Task.Delay(100);
                StateHasChanged();
                await Task.Delay(2000);
                OnClick.InvokeAsync("home");
            }
        }
    }

    private async Task IdleTime()
    {
        do
        {
            span = DateTime.Now - starttime;
            if (overtime > 0 && span.TotalMilliseconds > overtime)
            {
                isTime = true;
                isTimeOut = true;
                break;
            }
        } while (isTimeOut == false);
    }

    private async Task ChangeIsTime()
    {
        isTime = !isTime;
        await Task.Delay(100);
        StateHasChanged();
    }

    private async Task Home()
    {
        isTimeOut = true;
        Utility.WriteLog("Ganti kartu condition : move to home", "step-action");
        OnClick.InvokeAsync("home");
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(100);
        Utility.WriteLog("Ganti kartu condition : id scanner return card", "step-action");
        scanner.ReturnCard();
        await Task.Delay(100);
        Utility.WriteLog("Ganti kartu condition : id scanner close reader", "step-action");
        scanner.CloseCVRReader();
    }

    private async Task KTP()
    {
        isTimeOut = true;
        Utility.WriteLog("Ganti kartu condition : move to ganti kartu pindai ktp", "step-action");
        OnClick.InvokeAsync("gantikartupindaiktp");
    }

    private async Task Berhasil()
    {
        isTimeOut = true;
        isVisible = true;
        await Task.Delay(50);
        StateHasChanged();
        dispenserPort = config.Read("PORT", Config.PARAM_PORT_CARD_DISPENSER);
        CardDispenser.baudRate = 115200;
        string ErrorCode = string.Empty;
        string message = string.Empty;
        dispenserBox = config.Read("DISPENSERCARD", Config.PARAM_DISPENSER_BOX);
        Utility.WriteLog("Ganti kartu condition : card dispenser process start", "step-action");
        dispenser.Dispenser(ref ErrorCode, dispenserPort, dispenserBox, ref message);
        Utility.WriteLog("Ganti kartu condition : move to ganti kartu berhasil", "step-action");
        OnClick.InvokeAsync("gantikartuberhasil");
    }
}
