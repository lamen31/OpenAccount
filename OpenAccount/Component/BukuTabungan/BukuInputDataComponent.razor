@using Microsoft.AspNetCore.Components
@using System.IO
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using OpenAccount.Data

@inject Transaksi trx 
@inject Config config
@inject Utility utility 
@inject HitServices services

<!-- ======= Hero Section ======= -->
<section id="hero">

    <div class="container">
        <div class="row">
            <div class="col-xl-6 pt-5 pt-lg-0 order-2 order-lg-1 d-flex flex-column justify-content-center" data-aos="fade-up">
                <div>
                    <span class="badge badge-primary" style="margin-bottom: 2rem; font-size: 20px;">Cetak Transaksi Buku Tabungan</span><br>
                    <teks>Hello, @trx._Nasabah[0]</teks>
                    <h3 style="color: #00529C;">Masukkan data buku tabungan Anda</h3>
                </div>
                <form>
                    <div class="form-row" style="padding: 2rem 0rem;">
                        <div class="form-group col-md-6">
                            <label for="inputEmail4" style="font-weight: 600; font-size: 18px;">Nomor Rekening Anda</label>
                            <input type="text" class="form-control" @bind="trx._Nasabah[1]">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="input_field_1" style="font-weight: 600; font-size: 18px;">Nomor Baris</label>
                            @if (barisbuku == string.Empty)
                            {
                                <input type="text" class="form-control" id="input_field_1" pattern="[1 -8]*" placeholder="No. baris yang akan dicetak" maxlength="2" required="required" @onclick="@(() => Inputfield1())">
                            }
                            else
                            {
                                <input type="text" class="form-control" id="input_field_1" pattern="[1 -8]*" @bind="barisbuku" maxlength="2" required="required" @onclick="@(() => Inputfield1())">
                            }
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="input_field_2" style="font-weight: 600; font-size: 18px;">Nomor Halaman</label>
                            @if (halamanbuku == string.Empty)
                            {
                                <input type="text" class="form-control" id="input_field_2" placeholder="No. halaman yang akan dicetak" maxlength="1" required="required" @onclick="@(() => Inputfield2())">
                            }
                            else
                            {
                                <input type="text" class="form-control" id="input_field_2" @bind="halamanbuku" maxlength="1" required="required" @onclick="@(() => Inputfield2())">
                            }
                        </div>
                        <div class="form-group col-md-6">
                            <label for="input_field_3" style="font-weight: 600; font-size: 18px;">Saldo Terakhir</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text" id="inputGroupPrepend2">Rp</span>
                                </div>
                                @if (saldorekening == string.Empty)
                                {
                                    <input type="text" class="form-control" id="input_field_3" placeholder="saldo terakhir pada buku" required="required" @onclick="@(() => Inputfield3())">
                                }
                                else
                                {
                                    <input type="text" class="form-control" id="input_field_3" @bind="saldorekening" required="required" @onclick="@(() => Inputfield3())">
                                }
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-xl-6 order-1 order-lg-2 hero-img" data-aos="fade-left" style=" padding: 3rem;">
                <div id="keyboard"></div>
                <container>
                    <button class="block" value="1" @onclick="@(() => InputPhoneNumber("1"))">1</button>
                    <button class="block" value="2" @onclick="@(() => InputPhoneNumber("2"))">2</button>
                    <button class="block" value="3" @onclick="@(() => InputPhoneNumber("3"))">3</button>
                    <button class="block" value="4" @onclick="@(() => InputPhoneNumber("4"))">4</button>
                    <button class="block" value="5" @onclick="@(() => InputPhoneNumber("5"))">5</button>
                    <button class="block" value="6" @onclick="@(() => InputPhoneNumber("6"))">6</button>
                    <button class="block" value="7" @onclick="@(() => InputPhoneNumber("7"))">7</button>
                    <button class="block" value="8" @onclick="@(() => InputPhoneNumber("8"))">8</button>
                    <button class="block" value="9" @onclick="@(() => InputPhoneNumber("9"))">9</button>
                    <button class="block" h2="" value="Hapus" @onclick="RemovePhoneNumber">Delete</button>
                    <button class="block" ck value="0" id="myBtnUndefine" @onclick="@(() => InputPhoneNumber("0"))">0</button>
                </container>
            </div>
        </div>
    </div>
</section>
<!-- End Hero -->
<!-- ======= Footer ======= -->
<footer id="footer" class="fixed-bottom">
    <div class="container" style="display: flex;">
        <div class="col-xl-2 order-1 order-lg-1">
            <button type="button" class="btn btn-primary" style="background-color: #4E4E4E;" @onclick="Home">Batal</button>
        </div>
        <div class="col-xl-8 order-2 order-lg-2">
            <ol class="track-progress" style="margin-left: 0%; margin-bottom: 2%;">
                <li class="done">
                    <em>1</em>
                    <!-- <span>Menu</span> -->
                </li>
                <li class="done">
                    <em>2</em>
                    <!-- <span>T & C</span> -->
                </li>
                <li class="done">
                    <em>3</em>
                    <!-- <span>Menu</span> -->
                </li>
                <li class="todo">
                    <em>4</em>
                    <!-- <span>Verification</span> -->
                </li>
                <li class="todo">
                    <em>5</em>
                    <!-- <span>Insert Money</span> -->
                </li>
                <li class="todo">
                    <em>6</em>
                    <!-- <span>Done</span> -->
                </li>
            </ol>
        </div>
        <div class="col-xl-2 order-3 order-lg-3">
            <button class="btn btn-primary" type="button" style="float: right;" @onclick="BukuKonfirmasi">Lanjut</button>
        </div>
    </div>
</footer><!-- End Footer -->

@code {
    [Parameter]
    public EventCallback<string> OnClick { get; set; }

    private string jenisbuku = string.Empty;
    private string barisbuku = string.Empty;
    private string halamanbuku = string.Empty;
    private string saldorekening = string.Empty;
    private string isTextfield = string.Empty;
    private string Date = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day).ToString("dd/MM/yy");
    private string[] tipe;
    private string[] sandi;
    private string[] nominal;
    private string[] pengesahan;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine("ENTERED INTO BUKU INPUT DATA");
            Utility.WriteLog("Buku condition : entered into buku input data", "step-action");
        }
    }

    //protected override async Task OnInitializedAsync()
    //{
    //    await ServicePassbook();
    //}

    

    private async Task Home()
    {
        OnClick.InvokeAsync("home");
    }

    private async Task BukuKonfirmasi()
    {

        trx.clearArray();
        if (saldorekening != string.Empty && int.Parse(barisbuku) <= 41 && int.Parse(halamanbuku) < 9)
        {
            //string path = config.Read("PATH", Config.PARAM_PATH_PASSBOOK);
            //string[] lines = System.IO.File.ReadAllLines(path);
            //tipe = new string[lines.Length];
            //sandi = new string[lines.Length];
            //nominal = new string[lines.Length];
            //pengesahan = new string[lines.Length];
            //for (int i = 0; i < lines.Length; i++)
            //{
            //    string[] column = lines[i].Split(";");
            //    for (int j = 0; j < column.Length; j++)
            //    {
            //        if (j == 0)
            //            tipe[i] = column[j];

            //        else if (j == 1)
            //            sandi[i] = column[j];

            //        else if (j == 2)
            //            nominal[i] = column[j];

            //        else if (j == 3)
            //            pengesahan[i] = column[j];
            //    }
            //}
            //Console.WriteLine("INPUT DATA FROM " + path + " SUCCESS");
            //Utility.WriteLog("Buku condition : input data from " + path + " success", "step-action");
            //trx.setPassbookTransaksi(barisbuku, halamanbuku, Date, tipe, sandi, nominal, saldorekening, pengesahan);
            trx.setPassbookTransaksi(barisbuku, halamanbuku, saldorekening);
            OnClick.InvokeAsync("bukukonfirmasi");
        }
    }

    private void Inputfield1()
    {
        isTextfield = "1";
    }

    private void Inputfield2()
    {
        isTextfield = "2";
    }

    private void Inputfield3()
    {
        isTextfield = "3";
    }
    private void InputPhoneNumber(string strinput)
    {
        switch (isTextfield)
        {
            case "1":
                barisbuku += strinput;
                break;
            case "2":
                halamanbuku += strinput;
                break;
            case "3":
                saldorekening += strinput;
                break;
        }
        //if (isTextfield == "1")
        //{
        //    barisbuku += strinput;
        //}
        //if (isTextfield == "2")
        //{
        //    halamanbuku += strinput;
        //}
        //if (isTextfield == "3")
        //{
        //    saldorekening += strinput;
        //}
    }

    private void RemovePhoneNumber()
    {
        switch (isTextfield)
        {
            case "1":
                if (barisbuku.Length > 0)
                    barisbuku = barisbuku.Substring(0, barisbuku.Length - 1);
                break;
            case "2":
                if (halamanbuku.Length > 0)
                    halamanbuku = halamanbuku.Substring(0, halamanbuku.Length - 1);
                break;
            case "3":
                if (saldorekening.Length > 0)
                    saldorekening = saldorekening.Substring(0, saldorekening.Length - 1);
                break;
        }
        //if (isTextfield == "1")
        //{
        //    if (barisbuku.Length <= 0)
        //    {
        //        barisbuku = "";
        //    }
        //    else
        //    {
        //        barisbuku = barisbuku.Substring(0, barisbuku.Length - 1);
        //    }
        //}

        //if (isTextfield == "2")
        //{
        //    if (halamanbuku.Length <= 0)
        //    {
        //        halamanbuku = "";
        //    }
        //    else
        //    {
        //        halamanbuku = halamanbuku.Substring(0, halamanbuku.Length - 1);
        //    }
        //}

        //if (isTextfield == "3")
        //{
        //    if (saldorekening.Length <= 0)
        //    {
        //        saldorekening = "";
        //    }
        //    else
        //    {
        //        saldorekening = saldorekening.Substring(0, saldorekening.Length - 1);
        //    }
        //}
    }
}
