@using Microsoft.AspNetCore.Components
@using OpenAccount.Data
@using System.IO
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using OpenAccount.Report;

@inject Transaksi trx
@inject Utility utility
@inject Config config
@inject Printer print
<!-- ======= Hero Section ======= -->
<section id="hero" @onclick="ResetTimer">
    @if (isEmail)
    {
        <div class="container">
            <div class="row" style="margin-top: 7%;">
                <div class="col-xl-6 pt-5 pt-lg-0 order-2 order-lg-1 d-flex flex-column justify-content-center" data-aos="fade-up">
                    <div>
                        <span class="badge badge-primary" style="margin-bottom: 2rem;">Cetak Histori Transaksi</span><br>
                        <teks style="line-height: 45px; font-size: 30px; font-weight: 500;">Silakan pilih <b>Bukti E-Statement</b> Anda</teks><br>
                        <h3 style="color: #00529C; font-size: 23px; font-weight: 400;">Setelah itu tekan <b>"KIRIM"</b></h3>
                    </div>
                    <div style="margin-top: 5%;">
                        <div>
                            <h5 style="color: #007BFF; font-weight: 600;">Bukti E-Statement</h5>
                        </div>
                        <button type="button" class="btn btn-primary" style="width: 34%; background-color: #FF8832; font-weight: 600; border-radius: 8px;" @onclick="setEmailMethod">Kirim Email</button>
                        <button type="button" class="btn btn-primary" style="width: 27%; background-color: #ffffff; color: #FF8832; margin-left: 2%; font-weight: 600; border: 2px solid #FF8832; border-radius: 8px;" @onclick="setCetakMethod">Cetak A4</button>

                    </div>

                </div>
                <div class="col-xl-6 order-1 order-lg-2 hero-img" data-aos="fade-left">
                    <img src="../assets/img/email-statement.gif" class="img-fluid" style="float: right; margin-top: 5%; float: right;">
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="container">
            <div class="row" style="margin-top: 7%;">
                <div class="col-xl-6 pt-5 pt-lg-0 order-2 order-lg-1 d-flex flex-column justify-content-center" data-aos="fade-up">
                    <div>
                        <span class="badge badge-primary" style="margin-bottom: 2rem;">Cetak Histori Transaksi</span><br>
                        <teks style="line-height: 45px; font-size: 30px; font-weight: 500;">Silakan pilih <b>Bukti E-Statement</b> Anda</teks><br>
                        <h3 style="color: #00529C; font-size: 23px; font-weight: 400;">Setelah itu tekan <b>"CETAK"</b></h3>
                    </div>
                    <div style="margin-top: 5%;">
                        <div>
                            <h5 style="color: #007BFF; font-weight: 600;">Bukti E-Statement</h5>
                        </div>
                        @if (!isEmailFound)
                        {
                            <button type="button" class="btn btn-primary" style="width: 34%; background-color: #ffffff; color: #FF8832; font-weight: 600; border: 2px solid #FF8832; border-radius: 8px; opacity:50%;" @onclick="setEmailMethod">Kirim Email</button>
                        }
                        else
                        {
                        <button type="button" class="btn btn-primary" style="width: 34%; background-color: #ffffff; color: #FF8832; font-weight: 600; border: 2px solid #FF8832; border-radius: 8px;" @onclick="setEmailMethod">Kirim Email</button>
                        }
                        <button type="button" class="btn btn-primary" style="width: 27%; background-color: #FF8832; font-weight: 600; margin-left: 2%; border-radius: 8px;" @onclick="setCetakMethod">Cetak A4</button>
                    </div>
                    @if (isNotEmail)
                    {
                        <h3 style="color: #ff0000; font-size: 20px; margin-top:20%;">
                            Mohon maaf, <br /> 
                            Anda tidak bisa melakukan layanan kirim email <br />
                            karena email anda belum terdaftar.
                    </h3>
                    }
                </div>
                <div class="col-xl-6 order-1 order-lg-2 hero-img" data-aos="fade-left">
                    <img src="../assets/img/cetak-statement.gif" class="img-fluid" style="float: right; margin-top: 5%; float: right;">
                </div>
            </div>
        </div>
    }

</section>
<!-- End Hero -->
<!-- ======= Footer ======= -->
<footer id="footer" class="fixed-bottom">
    <div class="container" style="display: flex;">
        <div class="col-xl-2 order-1 order-lg-1">
            <button type="button" @onclick="Kembali" class="btn btn-primary" style="background-color: #4E4E4E;">Kembali</button>
        </div>
        <div class="col-xl-8 order-2 order-lg-2">
            <ol class="track-progress" style="margin-left: 0%; margin-bottom: 2%;">
                <li class="done">
                    <em>1</em>
                    <!-- <span>Menu</span> -->
                </li>
                <li class="done">
                    <em>2</em>
                    <!-- <span>T & C</span> -->
                </li>
                <li class="done">
                    <em>3</em>
                    <!-- <span>Menu</span> -->
                </li>
                <li class="todo">
                    <em>4</em>
                    <!-- <span>Verification</span> -->
                </li>
                <li class="todo">
                    <em>5</em>
                    <!-- <span>Insert Money</span> -->
                </li>
            </ol>
        </div>
        <div class="col-xl-2 order-3 order-lg-3">
            <button class="btn btn-primary" type="submit" style="float: right;" @onclick="Lanjut">@cetakEmail</button>
        </div>
    </div>
</footer><!-- End Footer -->

@if (isVisible)
{
    @*<div class="modal" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="background-color:rgba(0, 0, 0, 0.418);">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-body">
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border text-primary" role="status" style="padding:0.5rem; margin-top: 5%;">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <div style="text-align: center; color: rgb(0, 0, 0);">
                            <h3 class="teks" style="margin-top: 5%;">Mohon tunggu,</h3>
                            <h5 style="font-style:italic;">Sedang dalam proses...</h5>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@
    <div class="modal" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.733);">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content" style="background-color: transparent;">
                <div class="d-flex justify-content-center">
                    <div class="spinner-border text-white" role="status" style="padding:0.5rem; margin-top: 5%;">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <!-- <img src="../assets/img/Spinner.gif"> -->
                </div>
                <div style="text-align: center; color: rgb(255, 255, 255);">
                    <h3 class="teks" style="margin-top: 5%;">Mohon tunggu,</h3>
                    <h3>Sedang dalam proses...</h3>
                </div>

            </div>
        </div>
    </div>
}

@*@if (isTime)
    {
        <div class="modal" id="exampleModalCenter" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="background-color:rgba(0, 0, 0, 0.418);">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-body">
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border text-primary" role="status" style="padding:0.5rem; margin-top: 5%;">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <div style="text-align: center; color: rgb(0, 0, 0);">
                            <h3 class="teks" style="margin-top: 5%;">MAAF,</h3>
                            <h5 style="font-style:italic;">Waktu Anda Telah Habis!</h5>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }*@



@code {
    [Parameter]
    public EventCallback<string> OnClick { get; set; }

    private TimeSpan span;
    private int overtime = 60000;
    private bool isTimeOut = false;
    private bool isTime = false;
    private bool isTimer = true;
    private DateTime starttime;

    private bool isRead = false;
    private string jumlahtransaksi;
    private int tempjumlahtransaksi;
    private bool isError = false;
    private bool isVisible = false;
    private bool isSuccess = false;
    private bool isNotEmail = false;

    private string cetakEmail = "CETAK";
    private bool isEmail = false;
    private bool isEmailFound = true;

    private async Task ResetTimer()
    {
        starttime = DateTime.Now;
    }
    private async Task IdleTime()
    {
        do
        {
            span = DateTime.Now - starttime;
            if (overtime > 0 && span.TotalMilliseconds > overtime)
            {
                isTime = true;
                isTimeOut = true;
                break;
            }
        } while (isTimeOut == false);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Utility.WriteLog("Histori condition : entered into histori pilih menu", "step-action");
            trx.timeOut = "historiPilihMetode";
            isTimer = true;
            starttime = DateTime.Now;
            await Task.Run(() => IdleTime());
            if (isTime && isTimeOut)
            {
                isTimeOut = true;
                await Task.Delay(100);
                StateHasChanged();
                await Task.Delay(2000);
                isTime = false;
                OnClick.InvokeAsync("konfirmasitimeout");
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (trx.emailNasabah == string.Empty || trx.emailNasabah == "")
            isEmailFound = false;
        setCetakMethod();
        trx._AccountNumber = trx._AccountNumber2;
    }

    private async Task setEmailMethod()
    {
        if (trx.emailNasabah != string.Empty || trx.emailNasabah != "")
        {
            isEmail = true;
            trx.jenisLayanan = 3;
            trx.isEmail = isEmail;
            cetakEmail = "KIRIM";
            StateHasChanged();
        }
        else
        {
            isEmail = false;
            trx.jenisLayanan = 2;
            trx.isEmail = isEmail;
            cetakEmail = "CETAK";
            isNotEmail = true;
            await Task.Delay(100);
            StateHasChanged();
        }
    }

    private async Task setCetakMethod()
    {
        isEmail = false;
        trx.jenisLayanan = 2;
        trx.isEmail = isEmail;
        cetakEmail = "CETAK";
        StateHasChanged();
    }

    private async Task Kembali()
    {
        isTimer = false;
        isTimeOut = true;
        OnClick.InvokeAsync("historiPilih");
    }

    private async Task Lanjut()
    {
        isTimer = false;
        isTimeOut = true;
        if (isEmail)
        {
            await checkEmailValidity();
        }
        else
        {
            OnClick.InvokeAsync("konfirmasimonthly");
        }
        //OnClick.InvokeAsync("konfirmasimonthly");
    }

    private async Task checkEmailValidity()
    {
        //check email validity
        /*string encryptFileName = trx._AccountNumber + "_" + trx.startDT.ToString("yyyyMMdd") + "-" + trx.endDT.ToString("yyyyMMdd") + ".pdf";
        var pdfFilePath = TestUtil.GetOutputFileName();
        var pdfEncryptFilePath = TestUtil.GetOutputFileNameEncrypt() + encryptFileName;
        RptMonthlyStatement rpt = new RptMonthlyStatement(trx);
        rpt.EncryptPDF(pdfFilePath, pdfEncryptFilePath, "1234567890");*/

        if (RegexUtilities.IsValidEmail(trx.emailNasabah))
        {
            OnClick.InvokeAsync("konfirmasimonthly");
        }
        else
        {
            //trx._ServicesErrorMessage = "Email Not Valid";
            trx.setErrorService("", "Email Not Valid");
            trx.statusLayanan = "ERROR";
            //HitLog.SendLog(trx, config, "HISTORY PILIH METODE: Email Not Valid");
            HitServices.SendLog(trx, config, "HISTORY PILIH METODE: Email Not Valid");
            OnClick.InvokeAsync("error");
        }
    }

}
