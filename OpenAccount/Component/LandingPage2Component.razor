@using Microsoft.AspNetCore.Components

<!-- ======= Hero Section ======= -->
<body oncontextmenu="return false" class="bg-home2" style="background-image:url('../assets/img/Folder SVG/bg-landing.svg')">
    <section id="hero" style="position: fixed;">

        <div class="container">
            <div class="row" style="margin-top:8%;">
                <div class="col-xl-6 pt-5 pt-lg-0 order-2 order-lg-1 d-flex flex-column justify-content-center" data-aos="fade-up">
                    <div>
                        <teks style="font-weight: 900;">Get Easy, Simply Use</teks>
                        <h5 style="margin-top: 3%; color: #00539cb7; font-size: 20px;">Lorem Ipsum is simply dummy text of the <br> printing and typesetting industry.</h5>
                        <button class="btn btn-primary" type="button" style="float: left; margin-top: 9%; font-weight: 700;" @onclick="InputRekening">START HERE</button>
                    </div>
                </div>
                <div class="col-xl-6 order-1 order-lg-2 hero-img" data-aos="fade-left">
                    <img src="./assets/img/Folder GIF/Landing-animation2.gif" style="width: 100%;">
                </div>
            </div>

        </div>
    </section>
</body>
<!-- End Hero -->

@if (isNotHour)
{
    @*<div class="modal" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="background-color:rgba(0, 0, 0, 0.418);">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-body">
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border text-primary" role="status" style="padding:0.5rem; margin-top: 5%;">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <div style="text-align: center; color: rgb(0, 0, 0);">
                            <h3 class="teks" style="margin-top: 5%;">SISTEM ERROR</h3>
                            <h5 style="font-style:italic;">Silahkan Hubungi Customer Service.</h5>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@
    <div class="modal" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="background-color: rgba(0, 0, 0, 0.733);">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content" style="background-color: transparent;">
                <div class="d-flex justify-content-center">
                    <div class="spinner-border text-white" role="status" style="padding:0.5rem; margin-top: 5%;">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <!-- <img src="../assets/img/Spinner.gif"> -->
                </div>
                <div style="text-align: center; color: rgb(255, 255, 255);">
                    <h3 class="teks" style="margin-top: 5%;">MAAF, mesin sedang tidak beroperasi</h3>
                    <h3>Jam operasional mesin 06.00-16.00</h3>
                </div>

            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public EventCallback<string> OnClick { get; set; }

    private bool isNotHour = false;
    private string TimeNow = string.Empty;

    //private async Task Test()
    //{
    //    string input = "000010000.00";
    //    checkZero(input);
    //}

    //private string checkZero(string strinput)
    //{
    //    string result;
    //    int startindex = 0;
    //    for (int i = 0; i < strinput.Length; i++)
    //    {
    //        if (strinput.Substring(i, 1) == "0")
    //            startindex += 1;
    //        else if (strinput.Substring(i, 1) == ".")
    //        {
    //            startindex -= 1;
    //            break;
    //        }
    //        else
    //            break;

    //    }
    //    result = strinput.Substring(startindex, strinput.Length - startindex);
    //    return result;
    //}

    private async Task InputRekening()
    {
        TimeNow = DateTime.Now.ToString("HH:mm:ss");
        if (DateTime.Now.Hour > 19 || DateTime.Now.Hour < 5)
        {
            //isNotHour = true;
            //await Task.Delay(100);
            //StateHasChanged();
            //await Task.Delay(5000);
            //isNotHour = false;
            //await Task.Delay(100);
            //StateHasChanged();
            //Console.WriteLine(TimeNow);
            OnClick.InvokeAsync("nothour");
        }
        else
            OnClick.InvokeAsync("inputrekening");
    }
}
